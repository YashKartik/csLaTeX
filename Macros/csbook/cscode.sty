% LaTeX package: cscode.sty
% Author: Agni Datta
% Date: 21/05/2024
% Version: 1
% Description: This package provides custom styles and environments for typesetting code listings in LaTeX documents, with support for C and C++ languages. It also includes a check to ensure compatibility with the csbook class.

% Check if csbook package is loaded
\@ifpackageloaded{csbook}{%
	% If csbook package is loaded, proceed with the package
	}{
	% If csbook package is not loaded, throw a warning
	\PackageWarning{cscode}{csbook package is not loaded.}
	% Load packages
	\RequirePackage[x11names]{xcolor}
	\RequirePackage{mdframed}
	\RequirePackage{hyperref}
	\RequirePackage{cleveref}
}

% Load necessary packages
\RequirePackage{listings}

\lstdefinelanguage{Rust}{%
  sensitive%
, morecomment=[l]{//}%
, morecomment=[s]{/*}{*/}%
, moredelim=[s][{\itshape\color[rgb]{0,0,0.75}}]{\#[}{]}%
, morestring=[b]{"}%
, alsodigit={}%
, alsoother={}%
, alsoletter={!}%
%
%
% [1] reserve keywords
% [2] traits
% [3] primitive types
% [4] type and value constructors
% [5] identifier
%
, morekeywords={break, continue, else, for, if, in, loop, match, return, while}  % control flow keywords
, morekeywords={as, const, let, move, mut, ref, static}  % in the context of variables
, morekeywords={dyn, enum, fn, impl, Self, self, struct, trait, type, union, use, where}  % in the context of declarations
, morekeywords={crate, extern, mod, pub, super}  % in the context of modularisation
, morekeywords={unsafe}  % markers
, morekeywords={abstract, alignof, become, box, do, final, macro, offsetof, override, priv, proc, pure, sizeof, typeof, unsized, virtual, yield}  % reserved identifiers
%
% grep 'pub trait [A-Za-z][A-Za-z0-9]*' -r . | sed 's/^.*pub trait \([A-Za-z][A-Za-z0-9]*\).*/\1/g' | sort -u | tr '\n' ',' | sed 's/^\(.*\),$/{\1}\n/g' | sed 's/,/, /g'
, morekeywords=[2]{Add, AddAssign, Any, AsciiExt, AsInner, AsInnerMut, AsMut, AsRawFd, AsRawHandle, AsRawSocket, AsRef, Binary, BitAnd, BitAndAssign, Bitor, BitOr, BitOrAssign, BitXor, BitXorAssign, Borrow, BorrowMut, Boxed, BoxPlace, BufRead, BuildHasher, CastInto, CharExt, Clone, CoerceUnsized, CommandExt, Copy, Debug, DecodableFloat, Default, Deref, DerefMut, DirBuilderExt, DirEntryExt, Display, Div, DivAssign, DoubleEndedIterator, DoubleEndedSearcher, Drop, EnvKey, Eq, Error, ExactSizeIterator, ExitStatusExt, Extend, FileExt, FileTypeExt, Float, Fn, FnBox, FnMut, FnOnce, Freeze, From, FromInner, FromIterator, FromRawFd, FromRawHandle, FromRawSocket, FromStr, FullOps, FusedIterator, Generator, Hash, Hasher, Index, IndexMut, InPlace, Int, Into, IntoCow, IntoInner, IntoIterator, IntoRawFd, IntoRawHandle, IntoRawSocket, IsMinusOne, IsZero, Iterator, JoinHandleExt, LargeInt, LowerExp, LowerHex, MetadataExt, Mul, MulAssign, Neg, Not, Octal, OpenOptionsExt, Ord, OsStrExt, OsStringExt, Packet, PartialEq, PartialOrd, Pattern, PermissionsExt, Place, Placer, Pointer, Product, Put, RangeArgument, RawFloat, Read, Rem, RemAssign, Seek, Shl, ShlAssign, Shr, ShrAssign, Sized, SliceConcatExt, SliceExt, SliceIndex, Stats, Step, StrExt, Sub, SubAssign, Sum, Sync, TDynBenchFn, Terminal, Termination, ToOwned, ToSocketAddrs, ToString, Try, TryFrom, TryInto, UnicodeStr, Unsize, UpperExp, UpperHex, WideInt, Write}
, morekeywords=[2]{Send}  % additional traits
%
, morekeywords=[3]{bool, char, f32, f64, i8, i16, i32, i64, isize, str, u8, u16, u32, u64, unit, usize, i128, u128}  % primitive types
%
, morekeywords=[4]{Err, false, None, Ok, Some, true}  % prelude value constructors
% grep 'pub \(type\|struct\|enum\) [A-Za-z][A-Za-z0-9]*' -r . | sed 's/^.*pub \(type\|struct\|enum\) \([A-Za-z][A-Za-z0-9]*\).*/\2/g' | sort -u | tr '\n' ',' | sed 's/^\(.*\),$/{\1}\n/g' | sed 's/,/, /g'    
, morekeywords=[3]{AccessError, Adddf3, AddI128, AddoI128, AddoU128, ADDRESS, ADDRESS64, addrinfo, ADDRINFOA, AddrParseError, Addsf3, AddU128, advice, aiocb, Alignment, AllocErr, AnonPipe, Answer, Arc, Args, ArgsInnerDebug, ArgsOs, Argument, Arguments, ArgumentV1, Ashldi3, Ashlti3, Ashrdi3, Ashrti3, AssertParamIsClone, AssertParamIsCopy, AssertParamIsEq, AssertUnwindSafe, AtomicBool, AtomicPtr, Attr, auxtype, auxv, BackPlace, BacktraceContext, Barrier, BarrierWaitResult, Bencher, BenchMode, BenchSamples, BinaryHeap, BinaryHeapPlace, blkcnt, blkcnt64, blksize, BOOL, boolean, BOOLEAN, BoolTrie, BorrowError, BorrowMutError, Bound, Box, bpf, BTreeMap, BTreeSet, Bucket, BucketState, Buf, BufReader, BufWriter, Builder, BuildHasherDefault, BY, BYTE, Bytes, CannotReallocInPlace, cc, Cell, Chain, CHAR, CharIndices, CharPredicateSearcher, Chars, CharSearcher, CharsError, CharSliceSearcher, CharTryFromError, Child, ChildPipes, ChildStderr, ChildStdin, ChildStdio, ChildStdout, Chunks, ChunksMut, ciovec, clock, clockid, Cloned, cmsgcred, cmsghdr, CodePoint, Color, ColorConfig, Command, CommandEnv, Component, Components, CONDITION, condvar, Condvar, CONSOLE, CONTEXT, Count, Cow, cpu, CRITICAL, CStr, CString, CStringArray, Cursor, Cycle, CycleIter, daddr, DebugList, DebugMap, DebugSet, DebugStruct, DebugTuple, Decimal, Decoded, DecodeUtf16, DecodeUtf16Error, DecodeUtf8, DefaultEnvKey, DefaultHasher, dev, device, Difference, Digit32, DIR, DirBuilder, dircookie, dirent, dirent64, DirEntry, Discriminant, DISPATCHER, Display, Divdf3, Divdi3, Divmoddi4, Divmodsi4, Divsf3, Divsi3, Divti3, dl, Dl, Dlmalloc, Dns, DnsAnswer, DnsQuery, dqblk, Drain, DrainFilter, Dtor, Duration, DwarfReader, DWORD, DWORDLONG, DynamicLibrary, Edge, EHAction, EHContext, Elf32, Elf64, Empty, EmptyBucket, EncodeUtf16, EncodeWide, Entry, EntryPlace, Enumerate, Env, epoll, errno, Error, ErrorKind, EscapeDebug, EscapeDefault, EscapeUnicode, event, Event, eventrwflags, eventtype, ExactChunks, ExactChunksMut, EXCEPTION, Excess, ExchangeHeapSingleton, exit, exitcode, ExitStatus, Failure, fd, fdflags, fdsflags, fdstat, ff, fflags, File, FILE, FileAttr, filedelta, FileDesc, FilePermissions, filesize, filestat, FILETIME, filetype, FileType, Filter, FilterMap, Fixdfdi, Fixdfsi, Fixdfti, Fixsfdi, Fixsfsi, Fixsfti, Fixunsdfdi, Fixunsdfsi, Fixunsdfti, Fixunssfdi, Fixunssfsi, Fixunssfti, Flag, FlatMap, Floatdidf, FLOATING, Floatsidf, Floatsisf, Floattidf, Floattisf, Floatundidf, Floatunsidf, Floatunsisf, Floatuntidf, Floatuntisf, flock, ForceResult, FormatSpec, Formatted, Formatter, Fp, FpCategory, fpos, fpos64, fpreg, fpregset, FPUControlWord, Frame, FromBytesWithNulError, FromUtf16Error, FromUtf8Error, FrontPlace, fsblkcnt, fsfilcnt, fsflags, fsid, fstore, fsword, FullBucket, FullBucketMut, FullDecoded, Fuse, GapThenFull, GeneratorState, gid, glob, glob64, GlobalDlmalloc, greg, group, GROUP, Guard, GUID, Handle, HANDLE, Handler, HashMap, HashSet, Heap, HINSTANCE, HMODULE, hostent, HRESULT, id, idtype, if, ifaddrs, IMAGEHLP, Immut, in, in6, Incoming, Infallible, Initializer, ino, ino64, inode, input, InsertResult, Inspect, Instant, int16, int32, int64, int8, integer, IntermediateBox, Internal, Intersection, intmax, IntoInnerError, IntoIter, IntoStringError, intptr, InvalidSequence, iovec, ip, IpAddr, ipc, Ipv4Addr, ipv6, Ipv6Addr, Ipv6MulticastScope, Iter, IterMut, itimerspec, itimerval, jail, JoinHandle, JoinPathsError, KDHELP64, kevent, kevent64, key, Key, Keys, KV, l4, LARGE, lastlog, launchpad, Layout, Lazy, lconv, Leaf, LeafOrInternal, Lines, LinesAny, LineWriter, linger, linkcount, LinkedList, load, locale, LocalKey, LocalKeyState, Location, lock, LockResult, loff, LONG, lookup, lookupflags, LookupHost, LPBOOL, LPBY, LPBYTE, LPCSTR, LPCVOID, LPCWSTR, LPDWORD, LPFILETIME, LPHANDLE, LPOVERLAPPED, LPPROCESS, LPPROGRESS, LPSECURITY, LPSTARTUPINFO, LPSTR, LPVOID, LPWCH, LPWIN32, LPWSADATA, LPWSAPROTOCOL, LPWSTR, Lshrdi3, Lshrti3, lwpid, M128A, mach, major, Map, mcontext, Metadata, Metric, MetricMap, mflags, minor, mmsghdr, Moddi3, mode, Modsi3, Modti3, MonitorMsg, MOUNT, mprot, mq, mqd, msflags, msghdr, msginfo, msglen, msgqnum, msqid, Muldf3, Mulodi4, Mulosi4, Muloti4, Mulsf3, Multi3, Mut, Mutex, MutexGuard, MyCollection, n16, NamePadding, NativeLibBoilerplate, nfds, nl, nlink, NodeRef, NoneError, NonNull, NonZero, nthreads, NulError, OccupiedEntry, off, off64, oflags, Once, OnceState, OpenOptions, Option, Options, OptRes, Ordering, OsStr, OsString, Output, OVERLAPPED, Owned, Packet, PanicInfo, Param, ParseBoolError, ParseCharError, ParseError, ParseFloatError, ParseIntError, ParseResult, Part, passwd, Path, PathBuf, PCONDITION, PCONSOLE, Peekable, PeekMut, Permissions, PhantomData, pid, Pipes, PlaceBack, PlaceFront, PLARGE, PoisonError, pollfd, PopResult, port, Position, Powidf2, Powisf2, Prefix, PrefixComponent, PrintFormat, proc, Process, PROCESS, processentry, protoent, PSRWLOCK, pthread, ptr, ptrdiff, PVECTORED, Queue, radvisory, RandomState, Range, RangeFrom, RangeFull, RangeInclusive, RangeMut, RangeTo, RangeToInclusive, RawBucket, RawFd, RawHandle, RawPthread, RawSocket, RawTable, RawVec, Rc, ReadDir, Receiver, recv, RecvError, RecvTimeoutError, ReentrantMutex, ReentrantMutexGuard, Ref, RefCell, RefMut, REPARSE, Repeat, Result, Rev, Reverse, riflags, rights, rlim, rlim64, rlimit, rlimit64, roflags, Root, RSplit, RSplitMut, RSplitN, RSplitNMut, RUNTIME, rusage, RwLock, RWLock, RwLockReadGuard, RwLockWriteGuard, sa, SafeHash, Scan, sched, scope, sdflags, SearchResult, SearchStep, SECURITY, SeekFrom, segment, Select, SelectionResult, sem, sembuf, send, Sender, SendError, servent, sf, Shared, shmatt, shmid, ShortReader, ShouldPanic, Shutdown, siflags, sigaction, SigAction, sigevent, sighandler, siginfo, Sign, signal, signalfd, SignalToken, sigset, sigval, Sink, SipHasher, SipHasher13, SipHasher24, size, SIZE, Skip, SkipWhile, Slice, SmallBoolTrie, sockaddr, SOCKADDR, sockcred, Socket, SOCKET, SocketAddr, SocketAddrV4, SocketAddrV6, socklen, speed, Splice, Split, SplitMut, SplitN, SplitNMut, SplitPaths, SplitWhitespace, spwd, SRWLOCK, ssize, stack, STACKFRAME64, StartResult, STARTUPINFO, stat, Stat, stat64, statfs, statfs64, StaticKey, statvfs, StatVfs, statvfs64, Stderr, StderrLock, StderrTerminal, Stdin, StdinLock, Stdio, StdioPipes, Stdout, StdoutLock, StdoutTerminal, StepBy, String, StripPrefixError, StrSearcher, subclockflags, Subdf3, SubI128, SuboI128, SuboU128, subrwflags, subscription, Subsf3, SubU128, Summary, suseconds, SYMBOL, SYMBOLIC, SymmetricDifference, SyncSender, sysinfo, System, SystemTime, SystemTimeError, Take, TakeWhile, tcb, tcflag, TcpListener, TcpStream, TempDir, TermInfo, TerminfoTerminal, termios, termios2, TestDesc, TestDescAndFn, TestEvent, TestFn, TestName, TestOpts, TestResult, Thread, threadattr, threadentry, ThreadId, tid, time, time64, timespec, TimeSpec, timestamp, timeval, timeval32, timezone, tm, tms, ToLowercase, ToUppercase, TraitObject, TryFromIntError, TryFromSliceError, TryIter, TryLockError, TryLockResult, TryRecvError, TrySendError, TypeId, U64x2, ucontext, ucred, Udivdi3, Udivmoddi4, Udivmodsi4, Udivmodti4, Udivsi3, Udivti3, UdpSocket, uid, UINT, uint16, uint32, uint64, uint8, uintmax, uintptr, ulflags, ULONG, ULONGLONG, Umoddi3, Umodsi3, Umodti3, UnicodeVersion, Union, Unique, UnixDatagram, UnixListener, UnixStream, Unpacked, UnsafeCell, UNWIND, UpgradeResult, useconds, user, userdata, USHORT, Utf16Encoder, Utf8Error, Utf8Lossy, Utf8LossyChunk, Utf8LossyChunksIter, utimbuf, utmp, utmpx, utsname, uuid, VacantEntry, Values, ValuesMut, VarError, Variables, Vars, VarsOs, Vec, VecDeque, vm, Void, WaitTimeoutResult, WaitToken, wchar, WCHAR, Weak, whence, WIN32, WinConsole, Windows, WindowsEnvKey, winsize, WORD, Wrapping, wrlen, WSADATA, WSAPROTOCOL, WSAPROTOCOLCHAIN, Wtf8, Wtf8Buf, Wtf8CodePoints, xsw, xucred, Zip, zx}
%
, morekeywords=[5]{assert!, assert_eq!, assert_ne!, cfg!, column!, compile_error!, concat!, concat_idents!, debug_assert!, debug_assert_eq!, debug_assert_ne!, env!, eprint!, eprintln!, file!, format!, format_args!, include!, include_bytes!, include_str!, line!, module_path!, option_env!, panic!, print!, println!, select!, stringify!, thread_local!, try!, unimplemented!, unreachable!, vec!, write!, writeln!}  % prelude macros
}%

% Define a style for C code
\lstdefinestyle{CStyle}{
	language=C, % Set the language to C
	basicstyle=\ttfamily\small, % Use a small monospaced font
	keywordstyle=\color{RoyalBlue2}, % Color keywords in Royal Blue
	commentstyle=\color{LightSteelBlue4}, % Color comments in Snow
	stringstyle=\color{Firebrick2}, % Color strings in Firebrick
	numberstyle=\tiny\ttfamily\color{SlateGray4}, % Set the style for line numbers
	numbers=left, % Position line numbers on the left
	stepnumber=1, % Number every line
	numbersep=10pt, % Space between line numbers and code
	backgroundcolor=\color{white}, % Set background color to white
	breaklines=true, % Automatically break lines
	captionpos=b, % Position captions at the bottom
	showspaces=false, % Don't show spaces
	showstringspaces=false, % Don't show spaces within strings
	showtabs=false, % Don't show tabs
	tabsize=4, % Set tab size to 4 spaces
	escapeinside={\%*}{*)} % Define escape characters for LaTeX code within C code
}

% Define a style for C++ code
\lstdefinestyle{CPlusPlusStyle}{
	language=C++, % Set the language to C++
	basicstyle=\ttfamily\small, % Use a small monospaced font
	keywordstyle=\color{RoyalBlue2}, % Color keywords in Royal Blue
	commentstyle=\color{LightSteelBlue4}, % Color comments in Snow
	stringstyle=\color{Firebrick2}, % Color strings in Firebrick
	numberstyle=\tiny\ttfamily\color{SlateGray4}, % Set the style for line numbers
	numbers=left, % Position line numbers on the left
	stepnumber=1, % Number every line
	numbersep=10pt, % Space between line numbers and code
	backgroundcolor=\color{white}, % Set background color to white
	breaklines=true, % Automatically break lines
	captionpos=b, % Position captions at the bottom
	showspaces=false, % Don't show spaces
	showstringspaces=false, % Don't show spaces within strings
	showtabs=false, % Don't show tabs
	tabsize=4, % Set tab size to 4 spaces
	escapeinside={\%*}{*)} % Define escape characters for LaTeX code within C++ code
}

% Define a style for Java code
\lstdefinestyle{JavaStyle}{
	language=Java, % Set the language to Java
	basicstyle=\ttfamily\small, % Use a small monospaced font
	keywordstyle=\color{RoyalBlue2}, % Color keywords in Royal Blue
	commentstyle=\color{LightSteelBlue4}, % Color comments in Snow
	stringstyle=\color{Firebrick2}, % Color strings in Firebrick
	numberstyle=\tiny\ttfamily\color{SlateGray4}, % Set the style for line numbers
	numbers=left, % Position line numbers on the left
	stepnumber=1, % Number every line
	numbersep=10pt, % Space between line numbers and code
	backgroundcolor=\color{white}, % Set background color to white
	breaklines=true, % Automatically break lines
	captionpos=b, % Position captions at the bottom
	showspaces=false, % Don't show spaces
	showstringspaces=false, % Don't show spaces within strings
	showtabs=false, % Don't show tabs
	tabsize=4, % Set tab size to 4 spaces
	escapeinside={\%*}{*)} % Define escape characters for LaTeX code within Java code
}

% Define a style for Rust code
\lstdefinestyle{RustStyle}{
	language=Rust, % Set the language to Rust
	basicstyle=\ttfamily\small, % Use a small monospaced font
	keywordstyle=\color{RoyalBlue2}, % Color keywords in Royal Blue
	commentstyle=\color{LightSteelBlue4}, % Color comments in Snow
	stringstyle=\color{Firebrick2}, % Color strings in Firebrick
	numberstyle=\tiny\ttfamily\color{SlateGray4}, % Set the style for line numbers
	numbers=left, % Position line numbers on the left
	stepnumber=1, % Number every line
	numbersep=10pt, % Space between line numbers and code
	backgroundcolor=\color{white}, % Set background color to white
	breaklines=true, % Automatically break lines
	captionpos=b, % Position captions at the bottom
	showspaces=false, % Don't show spaces
	showstringspaces=false, % Don't show spaces within strings
	showtabs=false, % Don't show tabs
	tabsize=4, % Set tab size to 4 spaces
	escapeinside={\%*}{*)} % Define escape characters for LaTeX code within Rust code
}

% Define a style for Python code
\lstdefinestyle{PythonStyle}{
	language=Python, % Set the language to Python
	basicstyle=\ttfamily\small, % Use a small monospaced font
	keywordstyle=\color{RoyalBlue2}, % Color keywords in Royal Blue
	commentstyle=\color{LightSteelBlue4}, % Color comments in Snow
	stringstyle=\color{Firebrick2}, % Color strings in Firebrick
	numberstyle=\tiny\ttfamily\color{SlateGray4}, % Set the style for line numbers
	numbers=left, % Position line numbers on the left
	stepnumber=1, % Number every line
	numbersep=10pt, % Space between line numbers and code
	backgroundcolor=\color{white}, % Set background color to white
	breaklines=true, % Automatically break lines
	captionpos=b, % Position captions at the bottom
	showspaces=false, % Don't show spaces
	showstringspaces=false, % Don't show spaces within strings
	showtabs=false, % Don't show tabs
	tabsize=4, % Set tab size to 4 spaces
	escapeinside={\%*}{*)} % Define escape characters for LaTeX code within Python code
}

% Reset box counter at the start of each chapter
\preto\chapter{\setcounter{codeboxcounter}{0}}

% Define new counter for code box
\newcounter{codeboxcounter}[chapter]

% Define new environment with mdframed
\newenvironment{codebox}[1][Code Box]
{
	\stepcounter{codeboxcounter}
	\newmdenv[
		frametitlebackgroundcolor=none, % Transparent background for frame title
		frametitlefont=\scshape\sffamily, % Bold frame title
		frametitleaboveskip=5pt, % Adjust the space above the frame title
		frametitlerule=true, % Enable rule under frame title
		frametitlerulecolor=black, % Set colour of rule under frame title
		frametitlerulewidth=1pt, % Set thickness of rule under frame title
		frametitlealignment=\raggedright, % Left-align frame title
		frametitle={\thechapter.\arabic{codeboxcounter}:~#1}, % Default frame title with chapter number
		linewidth=1pt, % Adjust frame thickness
		linecolor=black, % Set horizontal line colour to black
		innertopmargin=10pt, % Adjust top inner margin
		innerbottommargin=10pt, % Adjust bottom inner margin
		leftline=false, % Disable left vertical line
		rightline=false, % Disable right vertical line
	]{codeboxinner}\begin{codeboxinner}}{\end{codeboxinner}}

% Commadn to make the work easier and done in a single line
\newcommand{\addcode}[4]{ % Define a new command for code with four arguments
	\begin{codebox}[#1]\label{code:#2} % Begin the code box environment with the provided title and label
		\lstinputlisting[style=#3]{#4} % Input the code from the specified file location with the specified style
	\end{codebox} % End the code box environment
}
				
% Customize cref format for code boxes
\crefformat{code}{program~#2#1#3}
\Crefformat{code}{Program~#2#1#3}